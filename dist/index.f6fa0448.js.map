{"mappings":"AAAA,IAAIA,MAEJ,SAASC,cACP,IAAIC,EAAS,CAAC,UAAW,UAAW,WAEpCF,MAAQ,IAAIG,YAAY,SAAU,WAAWC,UAC7C,IAAIC,EAAO,IAAIC,KAAKN,OAGhBO,EAAM,GACNC,EAASR,MAAMS,KAAKC,QAAQ,KAC5BC,GAA8B,GAApBC,OAAOC,WACjBC,EAA4B,IAApBF,OAAOC,WACfC,EAAQ,MAAKA,EAAQ,KAKzB,IAJA,IAAIC,EAAO,IAAIC,KAAK,EAAGL,GAAOM,GAAGjB,MAAMS,KAAKS,EAAG,GAC3CC,EAAQX,EAAOY,QAEfC,EAA2C,EAAvCC,KAAKC,IAAIvB,MAAMS,KAAKS,EAAGlB,MAAMS,KAAKe,GACjCC,EAAI,EAAGA,EAAIX,EAAOW,IAAK,CAC9B,IAAIC,EAAI,IAAIC,OACVL,KAAKM,SAAWP,EAAIC,KAAKM,SAAWP,EACpCC,KAAKM,SAAWP,EAAIC,KAAKM,SAAWP,GAEtCK,EAAEG,OAAOrB,GAAQsB,SAASL,EAAKH,KAAKS,GAAMjB,EAAON,GACjDkB,EAAEM,WAAa,GACfzB,EAAI0B,KAAKP,E,CAIX1B,MAAMkC,IAAI,CACRC,QAAS,SAAUC,EAAMC,EAAKC,GAC5B,IAAK,IAAIC,EAAI,EAAGA,EAAIhC,EAAIiC,OAAQD,IAAK,CAEnC,IAAIE,EAAKlC,EAAIgC,GAEbE,EAAGX,SAASY,MAAMC,WAAa,GAAInC,GACnCH,EACGuC,QAAO,GACPC,KAAK3C,EAAOqC,EAAI,IAChBO,MAAML,EAAI,GAGb,IAAIM,EAAK,IAAI/B,KAAKyB,GAAIxB,GAAGF,EAAKiC,0BAA0BP,IAG1CnB,KAAKC,IACjB,GACA,EAAID,KAAK2B,IAAIlC,EAAKmC,qBAAqBT,IAAOpB,GAE5BC,KAAK2B,IAAIF,EAAGG,qBAAqB/B,IAEjC,GACdZ,EAAIgC,GAAGP,WAAa,KAAKzB,EAAIgC,GAAGP,YAAc,MAE9CzB,EAAIgC,GAAGP,WAAa,KAAKzB,EAAIgC,GAAGP,YAAc,KAGpD,IAAImB,EAAQ,oBAAsB5C,EAAIgC,GAAGP,WAAa,IACtD3B,EAAKuC,OAAOO,GAAON,MAAK,GAAM9B,KAAKgC,E,GAIvCK,cAAe,SAAUC,EAAMnC,EAAGM,EAAG8B,GACvB,QAARD,GACFlC,EAAMoC,IAAIrC,EAAGM,E,EAIjBgC,cAAe,SAAUH,EAAMnC,EAAGM,EAAG8B,GACnCG,KAAKL,cAAcC,EAAMnC,EAAGM,E,IAIhCxB,MAAM0D,YACN1D,MAAM2D,M,CAGR1D,cAEA2D,EAAEhD,QAAQiD,QAAO,WACf7D,MAAM8D,YACNF,EAAE,UAAUG,SACZ9D,a","sources":["scripts/canvas.js"],"sourcesContent":["var space;\n\nfunction floatySpace() {\n  var colors = ['#FF3F8E', '#04C2C9', '#2E55C1'];\n\n  space = new CanvasSpace('canvas', '#252934').display();\n  var form = new Form(space);\n\n  // Elements\n  var pts = [];\n  var center = space.size.$divide(1.8);\n  var angle = -(window.innerWidth * 0.5);\n  var count = window.innerWidth * 0.05;\n  if (count > 150) count = 150;\n  var line = new Line(0, angle).to(space.size.x, 0);\n  var mouse = center.clone();\n\n  var r = Math.min(space.size.x, space.size.y) * 1;\n  for (var i = 0; i < count; i++) {\n    var p = new Vector(\n      Math.random() * r - Math.random() * r,\n      Math.random() * r - Math.random() * r\n    );\n    p.moveBy(center).rotate2D((i * Math.PI) / count, center);\n    p.brightness = 0.1;\n    pts.push(p);\n  }\n\n  // Canvas\n  space.add({\n    animate: function (time, fps, context) {\n      for (var i = 0; i < pts.length; i++) {\n        // rotate the points slowly\n        var pt = pts[i];\n\n        pt.rotate2D(Const.one_degree / 20, center);\n        form\n          .stroke(false)\n          .fill(colors[i % 3])\n          .point(pt, 1);\n\n        // get line from pt to the mouse line\n        var ln = new Line(pt).to(line.getPerpendicularFromPoint(pt));\n\n        // opacity of line derived from distance to the line\n        var opacity = Math.min(\n          0.8,\n          1 - Math.abs(line.getDistanceFromPoint(pt)) / r\n        );\n        var distFromMouse = Math.abs(ln.getDistanceFromPoint(mouse));\n\n        if (distFromMouse < 50) {\n          if (pts[i].brightness < 0.3) pts[i].brightness += 0.015;\n        } else {\n          if (pts[i].brightness > 0.1) pts[i].brightness -= 0.01;\n        }\n\n        var color = 'rgba(255,255,255,' + pts[i].brightness + ')';\n        form.stroke(color).fill(true).line(ln);\n      }\n    },\n\n    onMouseAction: function (type, x, y, evt) {\n      if (type == 'move') {\n        mouse.set(x, y);\n      }\n    },\n\n    onTouchAction: function (type, x, y, evt) {\n      this.onMouseAction(type, x, y);\n    },\n  });\n\n  space.bindMouse();\n  space.play();\n}\n\nfloatySpace();\n\n$(window).resize(function () {\n  space.removeAll();\n  $('canvas').remove();\n  floatySpace();\n});\n"],"names":["space","floatySpace","colors","CanvasSpace","display","form","Form","pts","center","size","$divide","angle","window","innerWidth","count","line","Line","to","x","mouse","clone","r","Math","min","y","i1","p","Vector","random","moveBy","rotate2D","PI","brightness","push","add","animate","time","fps","context","i","length","pt","Const","one_degree","stroke","fill","point","ln","getPerpendicularFromPoint","abs","getDistanceFromPoint","color","onMouseAction","type","evt","set","onTouchAction","this","bindMouse","play","$","resize","removeAll","remove"],"version":3,"file":"index.f6fa0448.js.map"}